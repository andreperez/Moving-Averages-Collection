// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © andre_007

//@version=4
study("Compiled Almanaque of Means", overlay=true, resolution="")

// ————— Input options for Averages

var string SMA = "Simple"
var string EMA = "Exponential"
var string DEMA = "Double Exponential"
var string TEMA = "Triple Exponential"
var string WMA = "Weighted"
var string SMMA = "Smoothed"
var string LSMA = "Least Squares"
var string HMA = "Hull"
var string ALMA = "Arnaud Legoux"

// ————— Average 1
string  group_1     = "Moving Average 1"
bool    show_avg_1  = input(title="On/Off", type=input.bool, defval=true, group=group_1, inline="9")
string  i_type_1    = input(SMA, "Type", options=[SMA, EMA, DEMA, TEMA, WMA, SMMA, LSMA, HMA, ALMA], group=group_1, inline="10")
color   i_color_1   = input(color.blue, "", group=group_1, inline="10")
int     i_length_1  = input(8, minval=1, title="Length", group=group_1, inline="10")
float   i_src_1     = input(close, title="Source", group=group_1, inline="11")
int     i_offset_1  = input(title="Offset", type=input.integer, defval=0, minval=-500, maxval=500, group=group_1, inline="11")

// ————— Average 2
string  group_2     = "Moving Average 2"
string  i_type_2    = input(SMA, "Type", options=[SMA, EMA, DEMA, TEMA, WMA, SMMA, LSMA, HMA, ALMA], group=group_2, inline="12")
color   i_color_2   = input(color.red, "", group=group_2, inline="12")
int     i_length_2  = input(21, minval=1, title="Length", group=group_2, inline="12")
float   i_src_2     = input(close, title="Source", group=group_2, inline="13")
int     i_offset_2  = input(title="Offset", type=input.integer, defval=0, minval=-500, maxval=500, group=group_2, inline="13")

// ————— Average 3
string  group_3     = "Moving Average 3"
string  i_type_3    = input(SMA, "Type", options=[SMA, EMA, DEMA, TEMA, WMA, SMMA, LSMA, HMA, ALMA], group=group_3, inline="14")
color   i_color_3   = input(color.yellow, "", group=group_3, inline="14")
int     i_length_3  = input(50, minval=1, title="Length", group=group_3, inline="14")
float   i_src_3     = input(close, title="Source", group=group_3, inline="15")
int     i_offset_3  = input(title="Offset", type=input.integer, defval=0, minval=-500, maxval=500, group=group_3, inline="15")

// ————— Average 4
string  group_4     = "Moving Average 4"
string  i_type_4    = input(SMA, "Type", options=[SMA, EMA, DEMA, TEMA, WMA, SMMA, LSMA, HMA, ALMA], group=group_4, inline="16")
color   i_color_4   = input(color.green, "", group=group_4, inline="16")
int     i_length_4  = input(80, minval=1, title="Length", group=group_4, inline="16")
float   i_src_4     = input(close, title="Source", group=group_4, inline="17")
int     i_offset_4  = input(title="Offset", type=input.integer, defval=0, minval=-500, maxval=500, group=group_4, inline="17")

// ————— Average 5
string  group_5     = "Moving Average 5"
string  i_type_5    = input(SMA, "Type", options=[SMA, EMA, DEMA, TEMA, WMA, SMMA, LSMA, HMA, ALMA], group=group_5, inline="18")
color   i_color_5   = input(color.fuchsia, "", group=group_5, inline="18")
int     i_length_5  = input(120, minval=1, title="Length", group=group_5, inline="18")
float   i_src_5     = input(close, title="Source", group=group_5, inline="19")
int     i_offset_5  = input(title="Offset", type=input.integer, defval=0, minval=-500, maxval=500, group=group_5, inline="19")

// ————— Average 6
string  group_6     = "Moving Average 6"
string  i_type_6    = input(SMA, "Type", options=[SMA, EMA, DEMA, TEMA, WMA, SMMA, LSMA, HMA, ALMA], group=group_6, inline="20")
color   i_color_6   = input(color.maroon, "", group=group_6, inline="20")
int     i_length_6  = input(160, minval=1, title="Length", group=group_6, inline="20")
float   i_src_6     = input(close, title="Source", group=group_6, inline="21")
int     i_offset_6  = input(title="Offset", type=input.integer, defval=0, minval=-500, maxval=500, group=group_6, inline="21")

// ————— Average 7
string  group_7     = "Moving Average 7"
string  i_type_7    = input(SMA, "Type", options=[SMA, EMA, DEMA, TEMA, WMA, SMMA, LSMA, HMA, ALMA], group=group_7, inline="20")
color   i_color_7   = input(color.maroon, "", group=group_7, inline="20")
int     i_length_7  = input(160, minval=1, title="Length", group=group_7, inline="20")
float   i_src_7     = input(close, title="Source", group=group_7, inline="21")
int     i_offset_7  = input(title="Offset", type=input.integer, defval=0, minval=-500, maxval=500, group=group_7, inline="21")

// ————— Functions

f_sma(_src, _len) =>
    out = sma(_src, _len)

f_ema(_src, _len) =>
    out = ema(_src, _len)

f_dema(_src, _len) =>
    e1 = ema(_src, _len)
    e2 = ema(e1, _len)
    out = 2 * e1 - e2

f_tema(_src, _len) =>
    ema1 = ema(_src, _len)
    ema2 = ema(ema1, _len)
    ema3 = ema(ema2, _len)
    out = 3 * (ema1 - ema2) + ema3

f_wma(_src, _len) =>
    out = wma(_src, _len)

f_average(_type, _src, _len) =>
    if _type == SMA
        f_sma(_src, _len)
    else if _type == EMA
        f_ema(_src, _len)
    else if _type == DEMA
        f_dema(_src, _len)
    else if _type == TEMA
        f_tema(_src, _len)
    else if _type == WMA
        f_wma(_src, _len)

// ————— Main
plot( f_average(i_type_1, i_src_1, i_length_1), color=i_color_1, offset=i_offset_1 )
plot( f_average(i_type_2, i_src_2, i_length_2), color=i_color_2, offset=i_offset_2 )
plot( f_average(i_type_3, i_src_3, i_length_3), color=i_color_3, offset=i_offset_3 )
plot( f_average(i_type_4, i_src_4, i_length_4), color=i_color_4, offset=i_offset_4 )
plot( f_average(i_type_5, i_src_5, i_length_5), color=i_color_5, offset=i_offset_5 )
plot( f_average(i_type_6, i_src_6, i_length_6), color=i_color_6, offset=i_offset_6 )
plot( f_average(i_type_7, i_src_7, i_length_7), color=i_color_7, offset=i_offset_7 )

// study(title="Smoothed Moving Average", shorttitle="SMMA", overlay=true, resolution="")
// len = input(7, minval=1, title="Length")
// src = input(close, title="Source")
// smma = 0.0
// smma := na(smma[1]) ? sma(src, len) : (smma[1] * (len - 1) + src) / len
// plot(smma, color=color.red)

// study(title = "Least Squares Moving Average", shorttitle="LSMA", overlay=true, resolution="")
// length = input(title="Length", type=input.integer, defval=25)
// offset = input(title="Offset", type=input.integer, defval=0)
// src = input(close, title="Source")
// lsma = linreg(src, length, offset)
// plot(lsma)

// study(title="Hull Moving Average", shorttitle="HMA", overlay=true, resolution="")
// length = input(9, minval=1)
// src = input(close, title="Source")
// hullma = wma(2*wma(src, length/2)-wma(src, length), floor(sqrt(length)))
// plot(hullma)

// study(title = "Arnaud Legoux Moving Average", shorttitle="ALMA", overlay=true, resolution="")
// source = close
// windowsize = input(title="Window Size", type=input.integer, defval=9)
// offset = input(title="Offset", type=input.float, defval=0.85)
// sigma = input(title="Sigma", type=input.float, defval=6)
// plot(alma(source, windowsize, offset, sigma))

// study(title = "Least Squares Moving Average", shorttitle="LSMA", overlay=true, resolution="")
// length = input(title="Length", type=input.integer, defval=25)
// offset = input(title="Offset", type=input.integer, defval=0)
// src = input(close, title="Source")
// lsma = linreg(src, length, offset)
// plot(lsma)