// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © andre_007

//@version=4
study("Compiled Almanaque of Means", overlay=true, resolution="")

// ————— Input options for Averages

var string SMA = "Simple"
var string EMA = "Exponential"
var string DEMA = "Double Exponential"
var string TEMA = "Triple Exponential"
var string WMA = "Weighted"
var string SMMA = "Smoothed"
var string LSMA = "Least Squares"
var string HMA = "Hull"
var string ALMA = "Arnaud Legoux"

// ————— Average 1
string GP1 = "Moving Average 1"
string i_type_1 = input(SMA, "Type", options=[SMA, EMA, DEMA, TEMA, WMA, SMMA, LSMA, HMA, ALMA], group=GP1, inline="10")
color i_color_1 = input(color.blue, "", group=GP1, inline="10")
int i_length_1 = input(9, minval=1, title="Length", group=GP1, inline="10")
i_src_1 = input(close, title="Source", group=GP1, inline="11")
i_offset_1 = input(title="Offset", type=input.integer, defval=0, minval=-500, maxval=500, group=GP1, inline="11")

// ————— Average 2
string GP2 = "Moving Average 2"
string i_type_2 = input(SMA, "Type", options=[SMA, EMA, DEMA, TEMA, WMA, SMMA, LSMA, HMA, ALMA], group=GP2, inline="12")
color i_color_2 = input(color.red, "", group=GP2, inline="12")
int i_length_2 = input(21, minval=1, title="Length", group=GP2, inline="12")
i_src_2 = input(close, title="Source", group=GP2, inline="12")
i_offset_2 = input(title="Offset", type=input.integer, defval=0, minval=-500, maxval=500, group=GP2, inline="12")

// ————— Average 3
string GP3 = "Moving Average 3"
string i_type_3 = input(SMA, "Type", options=[SMA, EMA, DEMA, TEMA, WMA, SMMA, LSMA, HMA, ALMA], group=GP2, inline="13")
color i_color_3 = input(color.yellow, "", group=GP2, inline="13")
int i_length_3 = input(50, minval=1, title="Length", group=GP2, inline="13")
i_src_3 = input(close, title="Source", group=GP2, inline="13")
i_offset_3 = input(title="Offset", type=input.integer, defval=0, minval=-500, maxval=500, group=GP2, inline="13")

// ————— Functions

f_sma(_src, _len) =>
    out = sma(_src, _len)

f_ema(_src, _len) =>
    out = ema(_src, _len)

f_dema(_src, _len) =>
    e1 = ema(_src, _len)
    e2 = ema(e1, _len)
    out = 2 * e1 - e2

f_tema(_src, _len) =>
    ema1 = ema(_src, _len)
    ema2 = ema(ema1, _len)
    ema3 = ema(ema2, _len)
    out = 3 * (ema1 - ema2) + ema3

f_wma(_src, _len) =>
    out = wma(_src, _len)

f_average(_type, _src, _len) =>
    if _type == SMA
        f_sma(_src, _len)
    else if _type == EMA
        f_ema(_src, _len)
    else if _type == DEMA
        f_dema(_src, _len)
    else if _type == TEMA
        f_tema(_src, _len)
    else if _type == WMA
        f_wma(_src, _len)

// ————— Main
plot( f_average(i_type_1, i_src_1, i_length_1), color=i_color_1, offset=i_offset_1 )
plot( f_average(i_type_2, i_src_2, i_length_2), color=i_color_2, offset=i_offset_2 )
plot( f_average(i_type_3, i_src_3, i_length_3), color=i_color_3, offset=i_offset_3 )

// study(title="Smoothed Moving Average", shorttitle="SMMA", overlay=true, resolution="")
// len = input(7, minval=1, title="Length")
// src = input(close, title="Source")
// smma = 0.0
// smma := na(smma[1]) ? sma(src, len) : (smma[1] * (len - 1) + src) / len
// plot(smma, color=color.red)

// study(title = "Least Squares Moving Average", shorttitle="LSMA", overlay=true, resolution="")
// length = input(title="Length", type=input.integer, defval=25)
// offset = input(title="Offset", type=input.integer, defval=0)
// src = input(close, title="Source")
// lsma = linreg(src, length, offset)
// plot(lsma)

// study(title="Hull Moving Average", shorttitle="HMA", overlay=true, resolution="")
// length = input(9, minval=1)
// src = input(close, title="Source")
// hullma = wma(2*wma(src, length/2)-wma(src, length), floor(sqrt(length)))
// plot(hullma)

// study(title = "Arnaud Legoux Moving Average", shorttitle="ALMA", overlay=true, resolution="")
// source = close
// windowsize = input(title="Window Size", type=input.integer, defval=9)
// offset = input(title="Offset", type=input.float, defval=0.85)
// sigma = input(title="Sigma", type=input.float, defval=6)
// plot(alma(source, windowsize, offset, sigma))

// study(title = "Least Squares Moving Average", shorttitle="LSMA", overlay=true, resolution="")
// length = input(title="Length", type=input.integer, defval=25)
// offset = input(title="Offset", type=input.integer, defval=0)
// src = input(close, title="Source")
// lsma = linreg(src, length, offset)
// plot(lsma)